public class Solution {
// 这种很简单的题目还是要小心, 
// 特别是在明知道双循环容易出错的情况下
// 感觉特别简单, 在i越界以后没有进行判断
// 结果导致循环不变式有边界条件
// 

// 而且还有一些其他的解法
// 1. 遇到1增加变量
//    遇到非1置0.

// 事实上大部分都是用的计数法。。。
    public int findMaxConsecutiveOnes(int[] nums) {
        if(null == nums)
            return 0;
        int len = nums.length;
        if(0 == len)    
            return 0;
        
        int l = 0; 
        int r = 1;
        int res = 0;
        
        while(l < len){
            
            while(l < len && nums[l] != 1)
                l++;
            // Error: ! r = l + 1
            // 对l的循环不变式假定错了
            // l不一定停在一个1上, 有可能挺在队列尾.
            // case [0]
            r = l;
            while(r < len && nums[r] == 1)
                r++;
            res = Math.max(res, r-l);
            l = r + 1;
        }
        
        return res;
    }
}
