public class Solution {
    // 这里面有写小陷阱，一开始以为这个题目的heater和house是相互对称的 
    // 也就是说循环遍历heater 和 house都可以, 
    // 但其实发现不是的, house需要全部被cover，但是多余的heater却是无所谓的.
    // 比如超出边界很多的heater，其实是可以不用管的.
    
    public int findRadius(int[] houses, int[] heaters) {
        if(null == houses || null == heaters){
            return 0;
        }
        
        int lenHo = houses.length;
        int lenHe = heaters.length;
        if(lenHe == 0 || lenHo == 0)
            return 0;
        if(lenHe == 1){
            return Math.max(Math.abs(houses[lenHo-1] - heaters[0]), Math.abs(houses[0] - heaters[0]));
        }
        
        int res = 0;
        
        Arrays.sort(houses);
        Arrays.sort(heaters);
        
        int i = 0;
        for(int j = 1; j < lenHe; ++j){
            while(i < lenHo && houses[i] <= heaters[j]){
                int mDist = Math.min(Math.abs(houses[i] - heaters[j]), Math.abs(houses[i] - heaters[j-1]));
                res = Math.max(res, mDist);
                i++;
            }
        }
        
        if(houses[lenHo-1] > heaters[lenHe-1])
            res = Math.max(res, houses[lenHo-1] - heaters[lenHe-1]);
            
        return res;
    }
}
