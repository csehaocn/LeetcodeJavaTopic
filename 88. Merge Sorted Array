public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if(null == nums1 || null == nums2){
            return;
        }
        
        int i = m-1; 
        int j = n-1;
        int k = m + n - 1;
        
        while(i >= 0 || j >= 0){
            
            if(i < 0){
                nums1[k--] = nums2[j--];
            }else if(j < 0){
                nums1[k--] = nums1[i--];
            }else{
                if(nums1[i] > nums2[j]){
                    nums1[k--] = nums1[i--];
                }else{
                    nums1[k--] = nums2[j--];
                }
            }
            
        }
        
        return;
        
    }
}

public class Solution {
// 倒是没什么新奇的, 出来的都是一样的解法
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        if(null == nums1 || null == nums2)
            return;
        
        while(m > 0 && n > 0){
            int i = m + n - 1;
            if(nums1[m-1] > nums2[n-1]){
                nums1[i] = nums1[m-1];
                m--;
            }else{
                nums1[i] = nums2[n-1];
                n--;
            }
        }
        while(n > 0){
            nums1[n-1] = nums2[n-1];
            n--;
        }
        return;
    }
}
